<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LoggexWebAPI</name>
    </assembly>
    <members>
        <member name="M:LoggexWebAPI.Controllers.LoginController.Login(LoggexWebAPI.ViewModels.CredGerenteViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
            dominio/api/Login
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IImgVeiculoRepository">
            <summary>
            Interface responsável pelo repositório de imagens dos veiculos
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IImgVeiculoRepository.Listar">
            <summary>
            Lista todas as Imagens
            </summary>
            <returns>Uma lista de Imagens</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IImgVeiculoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca uma Imagem a partir de um ID
            </summary>
            <param name="idImagem">ID da Imagem a ser buscada</param>
            <returns>Uma Imagem encontrada</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IImgVeiculoRepository.Cadastrar(LoggexWebAPI.Domains.ImgVeiculo)">
            <summary>
            Cadastra uma nova Imagem
            </summary>
            <param name="NovaImagem">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IImgVeiculoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.ImgVeiculo)">
            <summary>
            Atualiza os dados de uma Imagem
            </summary>
            <param name="idImagem">ID da Imagem a ser atualizada</param>
            <param name="ImagemU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IImgVeiculoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Imagem
            </summary>
            <param name="idImagem">ID da Imagem a ser deletada</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.ILogAlteracaoRepository">
            <summary>
            Interface responsável pelo repositório de logs de alteração
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ILogAlteracaoRepository.Listar">
            <summary>
            Lista todos os Logs
            </summary>
            <returns>Uma lista de Logs</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ILogAlteracaoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um Log a partir de um ID
            </summary>
            <param name="idLog">ID do Log a ser buscado</param>
            <returns>Um Log encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ILogAlteracaoRepository.Cadastrar(LoggexWebAPI.Domains.LogAlteracao)">
            <summary>
            Cadastra um novo Log
            </summary>
            <param name="NovoLog">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ILogAlteracaoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.LogAlteracao)">
            <summary>
            Atualiza os dados de um Log
            </summary>
            <param name="idLog">ID do Log a ser atualizado</param>
            <param name="LogU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ILogAlteracaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Log
            </summary>
            <param name="idLog">ID da Log a ser deletado</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IManutencaoRepository">
            <summary>
            Interface responsável pelo repositório de manutenções
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IManutencaoRepository.Listar">
            <summary>
            Lista todas as manutenções
            </summary>
            <returns>Uma lista de manutenções</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IManutencaoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca uma manutencao a partir de um ID
            </summary>
            <param name="idManutencao">ID da manutencao a ser buscada</param>
            <returns>Uma manutencao encontrada</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IManutencaoRepository.Cadastrar(LoggexWebAPI.Domains.Manutenco)">
            <summary>
            Cadastra uma nova manutencao
            </summary>
            <param name="NovaManutencao">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IManutencaoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Manutenco)">
            <summary>
            Atualiza os dados de uma manutencao
            </summary>
            <param name="idManutencao">ID da manutencao a ser atualizada</param>
            <param name="manutencaoU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IManutencaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma manutencao
            </summary>
            <param name="idManutencao">ID da manutencao a ser deletada</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IMotoristaRepository">
            <summary>
            Interface responsável pelo repositório de motoristas
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IMotoristaRepository.Listar">
            <summary>
            Lista todos os Motoristas
            </summary>
            <returns>Uma lista de Motoristas</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IMotoristaRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um Motorista a partir de um ID
            </summary>
            <param name="idMotorista">ID do Motorista a ser buscado</param>
            <returns>Um Motorista encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IMotoristaRepository.Cadastrar(LoggexWebAPI.Domains.Motorista)">
            <summary>
            Cadastra um novo Motorista
            </summary>
            <param name="NovoMotorista">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IMotoristaRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Motorista)">
            <summary>
            Atualiza os dados de um Motorista
            </summary>
            <param name="idMotorista">ID do Motorista a ser atualizado</param>
            <param name="MotoristaU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IMotoristaRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Motorista
            </summary>
            <param name="idMotorista">ID da Motorista a ser deletado</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IPecaRepository">
            <summary>
            Interface responsável pelo repositório de peças
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IPecaRepository.Listar">
            <summary>
            Lista todas as Peça
            </summary>
            <returns>Uma lista de Peça</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IPecaRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca uma Peça a partir de um ID
            </summary>
            <param name="idPeca">ID da Peça a ser buscada</param>
            <returns>Uma Peca encontrada</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IPecaRepository.Cadastrar(LoggexWebAPI.Domains.Peca)">
            <summary>
            Cadastra uma nova Peça
            </summary>
            <param name="NovaPeca">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IPecaRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Peca)">
            <summary>
            Atualiza os dados de uma Peça
            </summary>
            <param name="idPeca">ID da Peças a ser atualizada</param>
            <param name="PecaU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IPecaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Peça
            </summary>
            <param name="idPeca">ID da Peças a ser deletada</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IRotaRepository">
            <summary>
            Interface responsável pelo repositório de rotas
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IRotaRepository.Listar">
            <summary>
            Lista todas as Rotas
            </summary>
            <returns>Uma lista de Rotas</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IRotaRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca uma Rota a partir de um ID
            </summary>
            <param name="idRota">ID da Rota a ser buscada</param>
            <returns>Uma Rota encontrada</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IRotaRepository.Cadastrar(LoggexWebAPI.Domains.Rota)">
            <summary>
            Cadastra uma nova Rota
            </summary>
            <param name="NovaRota">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IRotaRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Rota)">
            <summary>
            Atualiza os dados de uma Rota
            </summary>
            <param name="idRota">ID da Rota a ser atualizada</param>
            <param name="RotaU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IRotaRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Rota
            </summary>
            <param name="idRota">ID da Rota a ser deletada</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.ISituacaoRepository">
            <summary>
            Interface responsável pelo repositório de situações
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ISituacaoRepository.Listar">
            <summary> 
            Lista todas as Situações
            </summary>
            <returns>Uma lista de Situações</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ISituacaoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca uma Situação a partir de um ID
            </summary>
            <param name="idSituacao">ID da Situação a ser buscada</param>
            <returns>Uma Situaco encontrada</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ISituacaoRepository.Cadastrar(LoggexWebAPI.Domains.Situaco)">
            <summary>
            Cadastra uma nova Situação
            </summary>
            <param name="Novasituacao">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ISituacaoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Situaco)">
            <summary>
            Atualiza os dados de uma Situação
            </summary>
            <param name="idSituacao">ID da Situação a ser atualizada</param>
            <param name="SituacoU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ISituacaoRepository.Deletar(System.Int32)">
            <summary>
            Deleta uma Situação
            </summary>
            <param name="idSituacao">ID da Situação a ser deletada</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.ITipoPecaRepository">
            <summary>
            Interface responsável pelo repositório de "Tipos de peças"
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoPecaRepository.Listar">
            <summary>
            Lista todos os Tipos de peças
            </summary>
            <returns>Uma lista de Tipos de peças</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoPecaRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um tipo de peça a partir de um ID
            </summary>
            <param name="idTiposPeca">ID do tipo de peça a ser buscado</param>
            <returns>Um TiposPeca encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoPecaRepository.Cadastrar(LoggexWebAPI.Domains.TiposPeca)">
            <summary>
            Cadastra um novo tipo de peça
            </summary>
            <param name="NovoTiposPeca">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoPecaRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.TiposPeca)">
            <summary>
            Atualiza os dados de um tipo de peça
            </summary>
            <param name="idTiposPeca">ID do tipo de peça a ser atualizado</param>
            <param name="TiposPecaU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoPecaRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de peça
            </summary>
            <param name="idTiposPeca">ID do tipo de peça a ser deletado</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.ITipoUsuarioRepository">
            <summary>
            Interface responsável pelo repositório de "Tipos de usuários"
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoUsuarioRepository.Listar">
            <summary>
            Lista todos os Tipos de usuários
            </summary>
            <returns>Uma lista de Tipos de usuários</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoUsuarioRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um tipo de usuário a partir de um ID
            </summary>
            <param name="idTiposUsuario">ID do tipo de usuário a ser buscado</param>
            <returns>Um TiposUsuario encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoUsuarioRepository.Cadastrar(LoggexWebAPI.Domains.TiposUsuario)">
            <summary>
            Cadastra um novo tipo de usuário
            </summary>
            <param name="NovoTiposUsuario">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoUsuarioRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.TiposUsuario)">
            <summary>
            Atualiza os dados de um tipo de usuário
            </summary>
            <param name="idTiposUsuario">ID do tipo de usuário a ser atualizado</param>
            <param name="TiposUsuarioU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de usuário
            </summary>
            <param name="idTiposUsuario">ID do tipo de usuário a ser deletado</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.ITipoVeiculoRepository">
            <summary>
            Interface responsável pelo repositório de "Tipos de veículos"
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoVeiculoRepository.Listar">
            <summary>
            Lista todos os Tipos de veículos
            </summary>
            <returns>Uma lista de Tipos de veículos</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoVeiculoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um tipo de veículo a partir de um ID
            </summary>
            <param name="idTiposVeiculo">ID do tipo de veículo a ser buscado</param>
            <returns>Um TiposVeiculo encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoVeiculoRepository.Cadastrar(LoggexWebAPI.Domains.TiposVeiculo)">
            <summary>
            Cadastra um novo tipo de veículo
            </summary>
            <param name="NovoTiposVeiculo">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoVeiculoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.TiposVeiculo)">
            <summary>
            Atualiza os dados de um tipo de veículo
            </summary>
            <param name="idTiposVeiculo">ID do tipo de veículo a ser atualizado</param>
            <param name="TiposVeiculoU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.ITipoVeiculoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um tipo de veículo
            </summary>
            <param name="idTiposVeiculo">ID do tipo de veículo a ser deletado</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IUsuarioRepository">
            <summary>
            Interface responsável pelo repositório de usuários
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.Listar">
            <summary>
            Lista todos os usuários
            </summary>
            <returns>Uma lista de Tipos de usuários</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um  usuário a partir de um ID
            </summary>
            <param name="idUsuario">ID do usuário a ser buscado</param>
            <returns>Um Usuario encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.Cadastrar(LoggexWebAPI.Domains.Usuario)">
            <summary>
            Cadastra um novo usuário
            </summary>
            <param name="NovoUsuario">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Usuario)">
            <summary>
            Atualiza os dados de um usuário
            </summary>
            <param name="idUsuario">ID do usuário a ser atualizado</param>
            <param name="UsuarioU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um  usuário
            </summary>
            <param name="idUsuario">ID do usuário a ser deletado</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.login(LoggexWebAPI.ViewModels.CredMotoristaViewModel)">
            <summary>
            Loga o motorista
            </summary>
            <param name="cred">Credenciais de login</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IUsuarioRepository.login(LoggexWebAPI.ViewModels.CredGerenteViewModel)">
            <summary>
            Loga o gerente
            </summary>
            <param name="cred">Credenciais de login</param>
        </member>
        <member name="T:LoggexWebAPI.Interfaces.IVeiculoRepository">
            <summary>
            Interface responsável pelo repositório de veículos
            </summary>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.Listar">
            <summary>
            Lista todos os veículos
            </summary>
            <returns>Uma lista de Tipos de veículos</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.BuscarPorID(System.Int32)">
            <summary>
            Busca um  veículo a partir de um ID
            </summary>
            <param name="idVeiculo">ID do veículo a ser buscado</param>
            <returns>Um Veiculo encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.BuscarPelaPlaca(System.String)">
            <summary>
            Busca um veículo através da placa
            </summary>
            <param name="placa">Placa do veículo a ser buscado</param>
            <returns>Um veículo encontrado</returns>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.Cadastrar(LoggexWebAPI.Domains.Veiculo)">
            <summary>
            Cadastra um novo veículo
            </summary>
            <param name="NovoVeiculo">Objeto com as informações a serem cadastradas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.Atualizar(System.Int32,LoggexWebAPI.Domains.Veiculo)">
            <summary>
            Atualiza os dados de um veículo
            </summary>
            <param name="idVeiculo">ID do veículo a ser atualizado</param>
            <param name="VeiculoU">Objeto com as informações a serem atualizadas</param>
        </member>
        <member name="M:LoggexWebAPI.Interfaces.IVeiculoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um  veículo
            </summary>
            <param name="idVeiculo">ID do veículo a ser deletado</param>
        </member>
    </members>
</doc>
